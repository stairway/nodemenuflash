package com.nodemenu {		import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import fl.transitions.Tween;	import fl.transitions.TweenEvent;		import com.greensock.*;	import com.greensock.plugins.*;	import com.greensock.easing.*;	import com.nodemenu.Node;	import com.nodemenu.NodeEvent;		public class BouncyNode extends Node {				/*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::		CONFIGURABLE ATTRIBUTES		::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/		public var initialDiameter:Number;		public var finalDiameter:Number;		public var initialAlpha:Number;		public var finalAlpha:Number;						private var widthTween:Tween;		private var heightTween:Tween;				private var lastChildIndex:uint;		private var maxChildIndex:uint;				private var active:Boolean;						/*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::		INITIALIZATION		::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/		private function init():void {			addEventListener(MouseEvent.MOUSE_OVER,openNode);						TweenPlugin.activate([AutoAlphaPlugin,BlurFilterPlugin,RoundPropsPlugin,SetActualSizePlugin,SetSizePlugin,HexColorsPlugin]);		}				/*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::		CONSTRUCTOR		::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/		public function BouncyNode(_initialDiameter:Number,_finalDiameter:Number) {			super(_initialDiameter);			initialDiameter = _initialDiameter;			finalDiameter = _finalDiameter;			init();		}				public function openNode(e:MouseEvent=null) {			removeEventListener(MouseEvent.MOUSE_OVER,openNode);			addEventListener(MouseEvent.MOUSE_OUT,closeNode);			this.filters = null;			TweenMax.to(this, 1.7, {autoAlpha:finalAlpha,setActualSize:{width:finalDiameter, height:finalDiameter}, roundProps:["width","height"], ease:Elastic.easeOut, easeParams:['1','.4'], onComplete:onOpenTween_complete});						if(parent!=null) {				maxChildIndex = parent.numChildren - 1;				lastChildIndex = parent.getChildIndex(this);				parent.setChildIndex(this,maxChildIndex);			}			active = true;			dispatchEvent(new NodeEvent(NodeEvent.NODE_OPEN));		}				public function closeNode(e:MouseEvent=null) {			removeEventListener(MouseEvent.MOUSE_OUT,closeNode);			addEventListener(MouseEvent.MOUSE_OVER,openNode);			TweenMax.to(this, 1, {autoAlpha:initialAlpha,setActualSize:{width:initialDiameter, height:initialDiameter}, roundProps:["width","height"], ease:Elastic.easeOut, easeParams:['1.2'], onComplete:onCloseTween_complete});						if(parent!=null) {				parent.setChildIndex(this,lastChildIndex);			}					active = false;			dispatchEvent(new NodeEvent(NodeEvent.NODE_CLOSED));		}				private function onOpenTween_complete() {}				private function onCloseTween_complete() {}			}	}